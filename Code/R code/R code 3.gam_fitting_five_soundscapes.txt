# 五类声景的日变化规律 GAM（终）（3.3.2）R code 3.gam_fitting_five_soundscapes

# 1. 安装并加载必要包
if (!requireNamespace("showtext", quietly = TRUE)) install.packages("showtext")
library(showtext)
library(ggplot2)
library(dplyr)
library(tidyr)
library(mgcv)
library(lubridate)
library(readr)    # 用于读 CSV

showtext_auto()
font_add("Times New Roman", regular = "C:/Windows/Fonts/times.ttf")

# 2. 从 CSV 读取数据
df <- read_csv(
  "E:/voice_data/统计分析/声景类型和声学指数的融合分析/result_table_3.csv",
  locale = locale(encoding = "UTF-8")
)

# 3. 数据整形：注意这里把所有以 “Sum” 结尾的列都 pivot
df_long <- df %>%
  # 把 datetime_minute 解析成 POSIXct
  mutate(
    datetime_min = as.POSIXct(datetime_minute, format = "%Y/%m/%d %H:%M"),
    hour_decimal = hour(datetime_min) + minute(datetime_min)/60
  ) %>%
  # 把五个“Sum”列拉长
  pivot_longer(
    cols      = ends_with("Sum"),
    names_to  = "soundscape",
    values_to = "value"
  ) %>%
  # soundscape 顺序改成和数据列名一致
  mutate(soundscape = factor(soundscape,
                             levels = c("Anthrophony Sum", "Avain Sum", "Insect Sum", "Geophony Sum", "Silence Sum")
  ))

# 4. 按声景类型分别拟合 GAM
gam_list <- df_long %>%
  group_by(soundscape) %>%
  do(model = gam(value ~ s(hour_decimal, bs = "cc"), data = ., method = "REML"))

# 5. 构建统一预测网格
pred_grid <- expand.grid(
  hour_decimal = seq(0, 24, length.out = 200),
  soundscape   = levels(df_long$soundscape)
)
pred_grid$fit <- mapply(function(sc, hd) {
  mod <- gam_list$model[gam_list$soundscape == sc][[1]]
  predict(mod, newdata = data.frame(hour_decimal = hd))
}, pred_grid$soundscape, pred_grid$hour_decimal)

# 6. 绘图
ggplot() +
  # 背景阴影
  geom_rect(aes(xmin = 0,    xmax = 5.5,  ymin = -Inf, ymax = Inf),
            fill = "#003366", alpha = 0.1) +
  geom_rect(aes(xmin = 5.5,  xmax = 8.0,  ymin = -Inf, ymax = Inf),
            fill = "#fdebd0", alpha = 0.1) +
  geom_rect(aes(xmin = 16.0, xmax = 18.5, ymin = -Inf, ymax = Inf),
            fill = "#a04000", alpha = 0.1) +
  geom_rect(aes(xmin = 18.5, xmax = 24,   ymin = -Inf, ymax = Inf),
            fill = "#003366", alpha = 0.1) +
  geom_vline(xintercept = c(6, 18), color = "orange", linetype = "dashed",
             linewidth = 1.5, alpha = 0.4) +
  
  # 五条 GAM 曲线
  geom_line(data = pred_grid,
            aes(x = hour_decimal, y = fit, color = soundscape),
            linewidth = 2.5, alpha = 0.8) +
  
  # 自定义配色及图例文字
  scale_color_manual(
    name   = "Soundscape",
    values = c(
      "Anthrophony Sum" = "#FF6666",
      "Avain Sum"       = "#66CCFF",
      "Insect Sum"      = "#FFCC66",
      "Geophony Sum"    = "#66FF66",
      "Silence Sum"     = "#CCCCCC"
    ),
    labels = c(
      "Anthrophony Sum" = "Anthrophony 5min Sum",
      "Avain Sum"       = "Avain 5min Sum",
      "Insect Sum"      = "Insect 5min Sum",
      "Geophony Sum"    = "Geophony 5min Sum",
      "Silence Sum"     = "Silence 5min Sum"
    )
  ) +
  
  scale_x_continuous(breaks = seq(0, 24, 2), limits = c(0, 24),
                     expand = expansion(mult = c(0.05, 0.05))) +
  scale_y_continuous(expand = expansion(mult = c(0.15, 0.15))) +
  
  labs(x = "Hour of Day", y = "Value") +
  
  theme_minimal(base_family = "Times New Roman") +
  theme(
    panel.grid      = element_blank(),
    axis.ticks      = element_line(color = "black", linewidth = 1),
    panel.border    = element_rect(color = "black", fill = NA, linewidth = 1),
    axis.text       = element_text(size = 14),
    axis.title      = element_text(size = 16, face = "bold"),
    legend.title    = element_text(size = 14, face = "bold"),
    legend.text     = element_text(size = 12)
  )
